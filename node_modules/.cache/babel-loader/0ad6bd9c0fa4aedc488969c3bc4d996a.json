{"ast":null,"code":"/** If the invalidIfStale option is set we suspend if resource has expired */\nexport default function hasUsableData(cacheReady, fetchShape) {\n  return !(fetchShape.options && fetchShape.options.invalidIfStale || !cacheReady);\n}","map":{"version":3,"sources":["../../../src/react-integration/hooks/hasUsableData.ts"],"names":["fetchShape"],"mappings":"AAEA;AACA,eAAe,SAAA,aAAA,CAAA,UAAA,EAAA,UAAA,EAOb;AACA,SAAO,EACJA,UAAU,CAAVA,OAAAA,IAAsBA,UAAU,CAAVA,OAAAA,CAAvB,cAACA,IACD,CAFF,UAAO,CAAP;AAID","sourcesContent":["import { FetchShape, Schema } from '~/resource';\n\n/** If the invalidIfStale option is set we suspend if resource has expired */\nexport default function hasUsableData<\n  S extends Schema,\n  Params extends Readonly<object>,\n  Body extends Readonly<object | string> | void\n>(\n  cacheReady: boolean,\n  fetchShape: Pick<FetchShape<S, Params, Body>, 'options'>,\n) {\n  return !(\n    (fetchShape.options && fetchShape.options.invalidIfStale) ||\n    !cacheReady\n  );\n}\n"]},"metadata":{},"sourceType":"module"}