{"ast":null,"code":"import { Resource, SimpleResource, SuperagentResource, FetchShape, DeleteShape, ReadShape, MutateShape, Schema, SchemaList, SchemaDetail, SchemaOf, schemas } from './resource';\nimport NetworkManager from './state/NetworkManager';\nimport RIC from './state/RIC';\nimport PollingSubscription from './state/PollingSubscription';\nimport SubscriptionManager from './state/SubscriptionManager';\nimport reducer, { initialState } from './state/reducer';\nimport { useDenormalized } from './state/selectors';\nimport { useCache, useCacheLegacy, useFetcher, useRetrieve, useResource, useResourceLegacy, useSubscription, useMeta, useError, CacheProvider, useInvalidator, useResetter, ExternalCacheProvider, PromiseifyMiddleware, NetworkErrorBoundary, NetworkError } from './react-integration';\nimport useSelectionUnstable from './react-integration/hooks/useSelection';\nimport { AbstractInstanceType, FetchOptions, Method, State, FetchAction, ReceiveAction, RPCAction, PurgeAction, Dispatch, MiddlewareAPI, Middleware, Manager } from './types';\nimport { StateContext, DispatchContext } from './react-integration/context';\nvar __INTERNAL__ = {\n  initialState: initialState,\n  StateContext: StateContext,\n  DispatchContext: DispatchContext,\n  RIC: RIC\n};\nexport { Resource, SimpleResource, SuperagentResource, CacheProvider, ExternalCacheProvider, PromiseifyMiddleware, useCache, useCacheLegacy, useFetcher, useRetrieve, useInvalidator, useResetter, useResource, useResourceLegacy, useSubscription, useMeta, useError, useSelectionUnstable, useDenormalized, NetworkManager, SubscriptionManager, PollingSubscription, reducer, NetworkErrorBoundary, schemas, __INTERNAL__ };","map":{"version":3,"sources":["../src/index.ts"],"names":["__INTERNAL__","initialState","StateContext","DispatchContext","RIC"],"mappings":"AAAA,SAAA,QAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,OAAA,QAAA,YAAA;AAcA,OAAA,cAAA,MAAA,wBAAA;AACA,OAAA,GAAA,MAAA,aAAA;AACA,OAAA,mBAAA,MAAA,6BAAA;AACA,OAAA,mBAAA,MAAA,6BAAA;AACA,OAAA,OAAA,IAAA,YAAA,QAAA,iBAAA;AACA,SAAA,eAAA,QAAA,mBAAA;AACA,SAAA,QAAA,EAAA,cAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,OAAA,EAAA,QAAA,EAAA,aAAA,EAAA,cAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,oBAAA,EAAA,oBAAA,EAAA,YAAA,QAAA,qBAAA;AAkBA,OAAA,oBAAA,MAAA,wCAAA;AAEA,SAAA,oBAAA,EAAA,YAAA,EAAA,MAAA,EAAA,KAAA,EAAA,WAAA,EAAA,aAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,OAAA,QAAA,SAAA;AAcA,SAAA,YAAA,EAAA,eAAA,QAAA,6BAAA;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,YAAY,EADO,YAAA;AAEnBC,EAAAA,YAAY,EAFO,YAAA;AAGnBC,EAAAA,eAAe,EAHI,eAAA;AAInBC,EAAAA,GAAG,EAAHA;AAJmB,CAArB;AAwDA,SAAA,QAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,qBAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,UAAA,EAAA,WAAA,EAAA,cAAA,EAAA,WAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,OAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,OAAA,EAAA,oBAAA,EAAA,OAAA,EAAA,YAAA","sourcesContent":["import {\n  Resource,\n  SimpleResource,\n  SuperagentResource,\n  FetchShape,\n  DeleteShape,\n  ReadShape,\n  MutateShape,\n  Schema,\n  SchemaList,\n  SchemaDetail,\n  SchemaOf,\n  schemas,\n} from './resource';\nimport NetworkManager from './state/NetworkManager';\nimport RIC from './state/RIC';\nimport PollingSubscription from './state/PollingSubscription';\nimport SubscriptionManager from './state/SubscriptionManager';\nimport reducer, { initialState } from './state/reducer';\nimport { useDenormalized } from './state/selectors';\nimport {\n  useCache,\n  useCacheLegacy,\n  useFetcher,\n  useRetrieve,\n  useResource,\n  useResourceLegacy,\n  useSubscription,\n  useMeta,\n  useError,\n  CacheProvider,\n  useInvalidator,\n  useResetter,\n  ExternalCacheProvider,\n  PromiseifyMiddleware,\n  NetworkErrorBoundary,\n  NetworkError,\n} from './react-integration';\nimport useSelectionUnstable from './react-integration/hooks/useSelection';\nimport { Request as RequestType } from 'superagent';\nimport {\n  AbstractInstanceType,\n  FetchOptions,\n  Method,\n  State,\n  FetchAction,\n  ReceiveAction,\n  RPCAction,\n  PurgeAction,\n  Dispatch,\n  MiddlewareAPI,\n  Middleware,\n  Manager,\n} from './types';\nimport { StateContext, DispatchContext } from './react-integration/context';\n\nconst __INTERNAL__ = {\n  initialState,\n  StateContext,\n  DispatchContext,\n  RIC,\n};\n\nexport type DeleteShape<\n  S extends schemas.Entity,\n  Params extends Readonly<object> = Readonly<object>,\n  Body extends Readonly<object | string> | void = undefined\n> = DeleteShape<S, Params, Body>;\nexport type MutateShape<\n  S extends Schema,\n  Params extends Readonly<object> = Readonly<object>,\n  Body extends Readonly<object | string> | void = Readonly<object> | undefined\n> = MutateShape<S, Params, Body>;\nexport type ReadShape<\n  S extends Schema,\n  Params extends Readonly<object> = Readonly<object>\n> = ReadShape<S, Params>;\nexport type FetchShape<\n  S extends Schema,\n  Params extends Readonly<object> = Readonly<object>,\n  Body extends Readonly<object | string> | void = Readonly<object> | undefined\n> = FetchShape<S, Params, Body>;\n\nexport type State<T> = State<T>;\nexport type Schema = Schema;\nexport type SchemaList<T> = SchemaList<T>;\nexport type SchemaDetail<T> = SchemaDetail<T>;\nexport type SchemaOf<T> = SchemaOf<T>;\nexport type AbstractInstanceType<T> = AbstractInstanceType<T>;\nexport type FetchOptions = FetchOptions;\nexport type Method = Method;\n\nexport type NetworkError = NetworkError;\nexport type Request = RequestType;\nexport type FetchAction<\n  Payload extends object | string | number = object | string | number\n> = FetchAction<Payload>;\nexport type ReceiveAction<\n  Payload extends object | string | number = object | string | number\n> = ReceiveAction<Payload>;\nexport type RPCAction<\n  Payload extends object | string | number = object | string | number\n> = RPCAction<Payload>;\nexport type PurgeAction = PurgeAction;\n\nexport type Dispatch<R extends React.Reducer<any, any>> = Dispatch<R>;\nexport type MiddlewareAPI<\n  R extends React.Reducer<any, any> = React.Reducer<any, any>\n> = MiddlewareAPI<R>;\nexport type Middleware = Middleware;\nexport type Manager = Manager;\n\nexport {\n  Resource,\n  SimpleResource,\n  SuperagentResource,\n  CacheProvider,\n  ExternalCacheProvider,\n  PromiseifyMiddleware,\n  useCache,\n  useCacheLegacy,\n  useFetcher,\n  useRetrieve,\n  useInvalidator,\n  useResetter,\n  useResource,\n  useResourceLegacy,\n  useSubscription,\n  useMeta,\n  useError,\n  useSelectionUnstable,\n  useDenormalized,\n  NetworkManager,\n  SubscriptionManager,\n  PollingSubscription,\n  reducer,\n  NetworkErrorBoundary,\n  schemas,\n  __INTERNAL__,\n};\n"]},"metadata":{},"sourceType":"module"}