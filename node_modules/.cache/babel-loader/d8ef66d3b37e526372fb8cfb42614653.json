{"ast":null,"code":"import { schema as schemas } from '@rest-hooks/normalizr';\nexport * from '@rest-hooks/normalizr';\nexport { schemas };","map":{"version":3,"sources":["../../src/resource/normal.ts"],"names":["schema"],"mappings":"AAAA,SACEA,MAAM,IADR,OAAA,QAAA,uBAAA;AAQA,cAAA,uBAAA;AACA,SAAA,OAAA","sourcesContent":["import {\n  schema as schemas,\n  Schema,\n  Denormalize as DenormalizeCore,\n  DenormalizeNullable as DenormalizeNullableCore,\n  Normalize as NormalizeCore,\n  NormalizeNullable as NormalizeNullableCore,\n} from '@rest-hooks/normalizr';\nexport * from '@rest-hooks/normalizr';\nexport { schemas };\n\nexport type SchemaDetail<T> =\n  | schemas.Entity<T>\n  | { [K: string]: any }\n  | schemas.SchemaClass;\n\nexport type SchemaList<T> =\n  | schemas.Entity<T>[]\n  | { [K: string]: any }\n  | Schema[]\n  | schemas.SchemaClass;\n\nexport type Denormalize<S> = Extract<S, schemas.Entity> extends never\n  ? (Extract<S, schemas.Entity[]> extends never\n      ? DenormalizeCore<S>\n      : DenormalizeCore<Extract<S, schemas.Entity[]>>)\n  : DenormalizeCore<Extract<S, schemas.Entity>>;\n\nexport type DenormalizeNullable<S> = Extract<S, schemas.Entity> extends never\n  ? (Extract<S, schemas.Entity[]> extends never\n      ? DenormalizeNullableCore<S>\n      : DenormalizeNullableCore<Extract<S, schemas.Entity[]>>)\n  : DenormalizeNullableCore<Extract<S, schemas.Entity>>;\n\nexport type Normalize<S> = Extract<S, schemas.Entity> extends never\n  ? (Extract<S, schemas.Entity[]> extends never\n      ? NormalizeCore<S>\n      : NormalizeCore<Extract<S, schemas.Entity[]>>)\n  : NormalizeCore<Extract<S, schemas.Entity>>;\n\nexport type NormalizeNullable<S> = Extract<S, schemas.Entity> extends never\n  ? (Extract<S, schemas.Entity[]> extends never\n      ? NormalizeNullableCore<S>\n      : NormalizeNullableCore<Extract<S, schemas.Entity[]>>)\n  : NormalizeNullableCore<Extract<S, schemas.Entity>>;\n"]},"metadata":{},"sourceType":"module"}