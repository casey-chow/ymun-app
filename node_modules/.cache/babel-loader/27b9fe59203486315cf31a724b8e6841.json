{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\"; // copied from https://github.com/TehShrike/is-mergeable-object\n\nexport default function isMergeableObject(value) {\n  return isNonNullObject(value) && !isSpecial(value);\n}\n\nfunction isNonNullObject(value) {\n  return !!value && _typeof(value) === 'object';\n}\n\nfunction isSpecial(value) {\n  var stringValue = Object.prototype.toString.call(value);\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n} // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\n\n\nvar canUseSymbol = typeof Symbol === 'function' && Symbol[\"for\"];\n/* istanbul ignore next */\n\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol[\"for\"]('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n  return value.$$typeof === REACT_ELEMENT_TYPE;\n}","map":{"version":3,"sources":["../../../src/state/merge/isMergeable.ts"],"names":["isNonNullObject","isSpecial","stringValue","Object","isReactElement","canUseSymbol","Symbol","REACT_ELEMENT_TYPE","value"],"mappings":"yDAAA;;AAEA,eAAe,SAAA,iBAAA,CAAA,KAAA,EAAuC;AACpD,SAAOA,eAAe,CAAfA,KAAe,CAAfA,IAA0B,CAACC,SAAS,CAA3C,KAA2C,CAA3C;AACD;;AAED,SAAA,eAAA,CAAA,KAAA,EAAqC;AACnC,SAAO,CAAC,CAAD,KAAA,IAAW,OAAA,CAAA,KAAA,CAAA,KAAlB,QAAA;AACD;;AAED,SAAA,SAAA,CAAA,KAAA,EAA+B;AAC7B,MAAMC,WAAW,GAAGC,MAAM,CAANA,SAAAA,CAAAA,QAAAA,CAAAA,IAAAA,CAApB,KAAoBA,CAApB;AAEA,SACED,WAAW,KAAXA,iBAAAA,IACAA,WAAW,KADXA,eAAAA,IAEAE,cAAc,CAHhB,KAGgB,CAHhB;EAOF;;;AACA,IAAMC,YAAY,GAAG,OAAA,MAAA,KAAA,UAAA,IAAgCC,MAAM,CAA3D,KAA2D,CAA3D;AACA;;AACA,IAAMC,kBAAkB,GAAGF,YAAY,GAAGC,MAAM,CAANA,KAAM,CAANA,CAAH,eAAGA,CAAH,GAAvC,MAAA;;AAEA,SAAA,cAAA,CAAA,KAAA,EAAoC;AAClC,SAAOE,KAAK,CAALA,QAAAA,KAAP,kBAAA;AACD","sourcesContent":["// copied from https://github.com/TehShrike/is-mergeable-object\n\nexport default function isMergeableObject(value: any) {\n  return isNonNullObject(value) && !isSpecial(value);\n}\n\nfunction isNonNullObject(value: any) {\n  return !!value && typeof value === 'object';\n}\n\nfunction isSpecial(value: any) {\n  const stringValue = Object.prototype.toString.call(value);\n\n  return (\n    stringValue === '[object RegExp]' ||\n    stringValue === '[object Date]' ||\n    isReactElement(value)\n  );\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nconst canUseSymbol = typeof Symbol === 'function' && Symbol.for;\n/* istanbul ignore next */\nconst REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value: any) {\n  return value.$$typeof === REACT_ELEMENT_TYPE;\n}\n"]},"metadata":{},"sourceType":"module"}