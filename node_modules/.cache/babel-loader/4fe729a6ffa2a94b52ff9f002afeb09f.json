{"ast":null,"code":"var _jsxFileName = \"/Users/juliablair/Desktop/christemp/ymun-app/src/pages/Home/UpNext.tsx\";\nimport { IonCard, IonCol, IonGrid, IonRow } from '@ionic/react';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useResource } from 'rest-hooks';\nimport EventResource from '../../resources/event';\nconst requestTimeFormat = 'YYYY-MM-DD HH:mm:ss';\nconst displayTimeFormat = 'h:mm A';\n\nconst UpNext = () => {\n  const now = dayjs();\n  const events = useResource(EventResource.listShape(), {\n    'filter[start_time][gt]': now.format(requestTimeFormat),\n    limit: 5\n  }); // Get all events within 30 minutes of the first event.\n\n  const eventsFiltered = events.length > 0 ? events.filter(event => dayjs(event.start_time).diff(events[0].start_time, 'minute') < 30) : events;\n  return React.createElement(IonCard, {\n    color: \"light\",\n    className: \"section-up-next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(IonGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, eventsFiltered.map(event => React.createElement(IonRow, {\n    key: event.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(IonCol, {\n    size: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, dayjs(event.start_time).format(displayTimeFormat))), React.createElement(IonCol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, event.title)))));\n};\n\nexport default UpNext;","map":{"version":3,"sources":["/Users/juliablair/Desktop/christemp/ymun-app/src/pages/Home/UpNext.tsx"],"names":["IonCard","IonCol","IonGrid","IonRow","dayjs","React","useResource","EventResource","requestTimeFormat","displayTimeFormat","UpNext","now","events","listShape","format","limit","eventsFiltered","length","filter","event","start_time","diff","map","id","title"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,OAA1B,EAAmCC,MAAnC,QAAiD,cAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAEA,MAAMC,iBAAiB,GAAG,qBAA1B;AACA,MAAMC,iBAAiB,GAAG,QAA1B;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAC7B,QAAMC,GAAG,GAAGP,KAAK,EAAjB;AACA,QAAMQ,MAAM,GAAGN,WAAW,CAACC,aAAa,CAACM,SAAd,EAAD,EAA4B;AACpD,8BAA0BF,GAAG,CAACG,MAAJ,CAAWN,iBAAX,CAD0B;AAEpDO,IAAAA,KAAK,EAAE;AAF6C,GAA5B,CAA1B,CAF6B,CAO7B;;AACA,QAAMC,cAAc,GAClBJ,MAAM,CAACK,MAAP,GAAgB,CAAhB,GACIL,MAAM,CAACM,MAAP,CACGC,KAAD,IACEf,KAAK,CAACe,KAAK,CAACC,UAAP,CAAL,CAAwBC,IAAxB,CAA6BT,MAAM,CAAC,CAAD,CAAN,CAAUQ,UAAvC,EAAmD,QAAnD,IAA+D,EAFnE,CADJ,GAKIR,MANN;AAQA,SACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,cAAc,CAACM,GAAf,CAAoBH,KAAD,IAClB,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAK,CAACI,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,KAAK,CAACe,KAAK,CAACC,UAAP,CAAL,CAAwBN,MAAxB,CAA+BL,iBAA/B,CADH,CADF,CADF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASU,KAAK,CAACK,KAAf,CANF,CADD,CADH,CADF,CADF;AAgBD,CAhCD;;AAkCA,eAAed,MAAf","sourcesContent":["import { IonCard, IonCol, IonGrid, IonRow } from '@ionic/react';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useResource } from 'rest-hooks';\nimport EventResource from '../../resources/event';\n\nconst requestTimeFormat = 'YYYY-MM-DD HH:mm:ss';\nconst displayTimeFormat = 'h:mm A';\n\nconst UpNext: React.FC = () => {\n  const now = dayjs();\n  const events = useResource(EventResource.listShape(), {\n    'filter[start_time][gt]': now.format(requestTimeFormat),\n    limit: 5,\n  });\n\n  // Get all events within 30 minutes of the first event.\n  const eventsFiltered =\n    events.length > 0\n      ? events.filter(\n          (event) =>\n            dayjs(event.start_time).diff(events[0].start_time, 'minute') < 30\n        )\n      : events;\n\n  return (\n    <IonCard color=\"light\" className=\"section-up-next\">\n      <IonGrid>\n        {eventsFiltered.map((event) => (\n          <IonRow key={event.id}>\n            <IonCol size=\"3\">\n              <strong>\n                {dayjs(event.start_time).format(displayTimeFormat)}\n              </strong>\n            </IonCol>\n            <IonCol>{event.title}</IonCol>\n          </IonRow>\n        ))}\n      </IonGrid>\n    </IonCard>\n  );\n};\n\nexport default UpNext;\n"]},"metadata":{},"sourceType":"module"}