{"ast":null,"code":"import React from'react';import{useCache}from'rest-hooks';import FileResource from'../../resources/file';import RoomAssignmentsCard from'./RoomAssignmentsCard';var MapCard=function MapCard(_ref){var map=_ref.map;var attachment=useCache(FileResource.detailShape(),{id:map.attachment});var thumbnail=attachment&&attachment.data.thumbnails.find(function(thumb){return thumb.width===300;});return React.createElement(RoomAssignmentsCard,{href:\"/maps/\".concat(map.id),thumbnailUrl:thumbnail&&thumbnail.url,title:map.name});};export default MapCard;","map":{"version":3,"sources":["/Users/juliablair/Desktop/christemp/ymun-app/src/pages/RoomAssignments/MapCard.tsx"],"names":["React","useCache","FileResource","RoomAssignmentsCard","MapCard","map","attachment","detailShape","id","thumbnail","data","thumbnails","find","thumb","width","url","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CAEA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CAMA,GAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAAa,IAAVC,CAAAA,GAAU,MAAVA,GAAU,CACnD,GAAMC,CAAAA,UAAU,CAAGL,QAAQ,CAACC,YAAY,CAACK,WAAb,EAAD,CAA6B,CACtDC,EAAE,CAAEH,GAAG,CAACC,UAD8C,CAA7B,CAA3B,CAIA,GAAMG,CAAAA,SAAS,CACbH,UAAU,EACVA,UAAU,CAACI,IAAX,CAAgBC,UAAhB,CAA2BC,IAA3B,CAAgC,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,GAAgB,GAA3B,EAAhC,CAFF,CAIA,MACE,qBAAC,mBAAD,EACE,IAAI,iBAAWT,GAAG,CAACG,EAAf,CADN,CAEE,YAAY,CAAEC,SAAS,EAAIA,SAAS,CAACM,GAFvC,CAGE,KAAK,CAAEV,GAAG,CAACW,IAHb,EADF,CAOD,CAhBD,CAkBA,cAAeZ,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport { useCache } from 'rest-hooks';\nimport FileResource from '../../resources/file';\nimport MapResource from '../../resources/map';\nimport RoomAssignmentsCard from './RoomAssignmentsCard';\n\nexport interface MapCardProps {\n  readonly map: MapResource;\n}\n\nconst MapCard: React.FC<MapCardProps> = ({ map }) => {\n  const attachment = useCache(FileResource.detailShape(), {\n    id: map.attachment,\n  });\n\n  const thumbnail =\n    attachment &&\n    attachment.data.thumbnails.find((thumb) => thumb.width === 300);\n\n  return (\n    <RoomAssignmentsCard\n      href={`/maps/${map.id}`}\n      thumbnailUrl={thumbnail && thumbnail.url}\n      title={map.name}\n    />\n  );\n};\n\nexport default MapCard;\n"]},"metadata":{},"sourceType":"module"}