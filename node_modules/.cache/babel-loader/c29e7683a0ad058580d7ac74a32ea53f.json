{"ast":null,"code":"import { useContext, useCallback } from 'react';\nimport { DispatchContext } from \"../context\";\n/** Returns a function to completely clear the cache of all entries */\n\nexport default function useResetter() {\n  var dispatch = useContext(DispatchContext);\n  var resetDispatcher = useCallback(function () {\n    dispatch({\n      type: 'rest-hooks/reset'\n    });\n  }, [dispatch]);\n  return resetDispatcher;\n}","map":{"version":3,"sources":["../../../src/react-integration/hooks/useResetter.ts"],"names":["dispatch","useContext","resetDispatcher","useCallback","type"],"mappings":"AAAA,SAAA,UAAA,EAAA,WAAA,QAAA,OAAA;AAEA,SAAA,eAAA,QAAA,YAAA;AAEA;;AACA,eAAe,SAAA,WAAA,GAAmC;AAChD,MAAMA,QAAQ,GAAGC,UAAU,CAA3B,eAA2B,CAA3B;AAEA,MAAMC,eAAe,GAAGC,WAAW,CAAC,YAAM;AACxCH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE;AADC,KAAD,CAARJ;AADiC,GAAA,EAIhC,CAJH,QAIG,CAJgC,CAAnC;AAMA,SAAA,eAAA;AACD","sourcesContent":["import { useContext, useCallback } from 'react';\n\nimport { DispatchContext } from '~/react-integration/context';\n\n/** Returns a function to completely clear the cache of all entries */\nexport default function useResetter(): () => void {\n  const dispatch = useContext(DispatchContext);\n\n  const resetDispatcher = useCallback(() => {\n    dispatch({\n      type: 'rest-hooks/reset',\n    });\n  }, [dispatch]);\n\n  return resetDispatcher;\n}\n"]},"metadata":{},"sourceType":"module"}