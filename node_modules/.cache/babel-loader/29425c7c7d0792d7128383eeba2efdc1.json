{"ast":null,"code":"import _slicedToArray from \"/Users/juliablair/Desktop/christemp/ymun-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/juliablair/Desktop/christemp/ymun-app/src/pages/EventList/EventListInner.tsx\";\nimport { IonButtons, IonContent, IonHeader, IonSelect, IonSelectOption, IonTitle, IonToolbar } from '@ionic/react';\nimport dayjs from 'dayjs';\nimport { groupBy, sortBy } from 'lodash';\nimport React, { useState } from 'react';\nimport { useResource, useRetrieve } from 'rest-hooks';\nimport EventResource from '../../resources/event';\nimport LocationResource from '../../resources/location';\nimport EventsListItem from './EventListItem';\nconst dateFormat = 'dddd';\n\nconst EventListInner = () => {\n  const events = useResource(EventResource.listShape(), {});\n  useRetrieve(LocationResource.listShape(), {});\n  const eventsByDay = groupBy(events, event => dayjs(event.start_time).format(dateFormat));\n  const allDays = Object.keys(eventsByDay); // get the current date, or the first day of the schedule if not available\n\n  const initialDay = (() => {\n    const currentDate = dayjs().format(dateFormat);\n\n    if (allDays.includes(currentDate)) {\n      return currentDate;\n    } else {\n      return allDays[0];\n    }\n  })();\n\n  const _useState = useState(initialDay),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentDay = _useState2[0],\n        setCurrentDay = _useState2[1];\n\n  const eventsSorted = sortBy(eventsByDay[currentDay], ['start_time']);\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        expandedKey = _useState4[0],\n        setExpandedKey = _useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(IonHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(IonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(IonButtons, {\n    slot: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(IonSelect, {\n    value: currentDay,\n    interface: \"popover\",\n    onIonChange: change => setCurrentDay(change.detail.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, allDays.map(day => React.createElement(IonSelectOption, {\n    key: day,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, day)))), React.createElement(IonTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Schedule\"))), React.createElement(IonContent, {\n    className: \"event-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(IonHeader, {\n    collapse: \"condense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(IonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(IonTitle, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Schedule\"))), React.createElement(\"div\", {\n    className: \"background-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, eventsSorted.map(event => React.createElement(EventsListItem, {\n    key: event.id,\n    event: event,\n    expanded: expandedKey === event.id,\n    onClick: expanded => {\n      // toggle expanded state\n      if (expanded) {\n        setExpandedKey(undefined);\n      } else {\n        setExpandedKey(event.id);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })))));\n};\n\nexport default EventListInner;","map":{"version":3,"sources":["/Users/juliablair/Desktop/christemp/ymun-app/src/pages/EventList/EventListInner.tsx"],"names":["IonButtons","IonContent","IonHeader","IonSelect","IonSelectOption","IonTitle","IonToolbar","dayjs","groupBy","sortBy","React","useState","useResource","useRetrieve","EventResource","LocationResource","EventsListItem","dateFormat","EventListInner","events","listShape","eventsByDay","event","start_time","format","allDays","Object","keys","initialDay","currentDate","includes","currentDay","setCurrentDay","eventsSorted","expandedKey","setExpandedKey","change","detail","value","map","day","id","expanded","undefined"],"mappings":"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","sourcesContent":["import {\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonSelect,\n  IonSelectOption,\n  IonTitle,\n  IonToolbar,\n} from '@ionic/react';\nimport dayjs from 'dayjs';\nimport { groupBy, sortBy } from 'lodash';\nimport React, { useState } from 'react';\nimport { useResource, useRetrieve } from 'rest-hooks';\nimport EventResource from '../../resources/event';\nimport LocationResource from '../../resources/location';\nimport EventsListItem from './EventListItem';\n\nconst dateFormat = 'dddd';\n\nconst EventListInner: React.FC = () => {\n  const events = useResource(EventResource.listShape(), {});\n  useRetrieve(LocationResource.listShape(), {});\n\n  const eventsByDay = groupBy(events, (event) =>\n    dayjs(event.start_time).format(dateFormat)\n  );\n  const allDays = Object.keys(eventsByDay);\n\n  // get the current date, or the first day of the schedule if not available\n  const initialDay = (() => {\n    const currentDate = dayjs().format(dateFormat);\n    if (allDays.includes(currentDate)) {\n      return currentDate;\n    } else {\n      return allDays[0];\n    }\n  })();\n\n  const [currentDay, setCurrentDay] = useState(initialDay);\n  const eventsSorted = sortBy(eventsByDay[currentDay], ['start_time']);\n\n  const [expandedKey, setExpandedKey] = useState<number | undefined>();\n\n  return (\n    <>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"primary\">\n            <IonSelect\n              value={currentDay}\n              interface=\"popover\"\n              onIonChange={(change) => setCurrentDay(change.detail.value)}\n            >\n              {allDays.map((day) => (\n                <IonSelectOption key={day}>{day}</IonSelectOption>\n              ))}\n            </IonSelect>\n          </IonButtons>\n          <IonTitle>Schedule</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"event-list\">\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Schedule</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <div className=\"background-inner\">\n          {eventsSorted.map((event) => (\n            <EventsListItem\n              key={event.id}\n              event={event}\n              expanded={expandedKey === event.id}\n              onClick={(expanded) => {\n                // toggle expanded state\n                if (expanded) {\n                  setExpandedKey(undefined);\n                } else {\n                  setExpandedKey(event.id);\n                }\n              }}\n            />\n          ))}\n        </div>\n      </IonContent>\n    </>\n  );\n};\n\nexport default EventListInner;\n"]},"metadata":{},"sourceType":"module"}