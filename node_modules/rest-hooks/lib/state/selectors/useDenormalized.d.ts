import { State } from "../../types";
import { ReadShape } from "../../resource/types";
import { Schema, DenormalizeNullable } from "../../resource";
/**
 * Selects the denormalized form from `state` cache.
 *
 * If `result` is not found, will attempt to generate it naturally
 * using params and schema. This increases cache hit rate for many
 * detail shapes.
 *
 * @returns [denormalizedValue, allEntitiesFound]
 */
export default function useDenormalized<Params extends Readonly<object>, S extends Schema>({ schema, getFetchKey }: Pick<ReadShape<S, Params>, 'schema' | 'getFetchKey'>, params: Params | null, state: State<any>): [DenormalizeNullable<typeof schema>, typeof params extends null ? false : boolean];
