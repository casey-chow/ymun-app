import React from 'react';
import { RenderHookOptions } from '@testing-library/react-hooks';
import { Fixture } from './mockState';
import { State, Manager } from '..';
export default function makeRenderRestHook(makeProvider: (managers: Manager[], initialState?: State<unknown>) => React.ComponentType<{
    children: React.ReactChild;
}>): {
    <P, R>(callback: (props: P) => R, options?: ({
        initialProps?: P | undefined;
        results?: Fixture[] | undefined;
    } & RenderHookOptions<P>) | undefined): import("@testing-library/react-hooks").RenderHookResult<P, R>;
    cleanup(): void;
};
