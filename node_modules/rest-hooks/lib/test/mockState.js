import { reducer, __INTERNAL__ } from '..';
var initialState = __INTERNAL__.initialState;
export default function mockInitialState(results) {
  var now = Date.now();
  var mockState = results.reduce(function (acc, _ref) {
    var request = _ref.request,
        params = _ref.params,
        result = _ref.result;
    var schema = request.schema,
        getFetchKey = request.getFetchKey;
    var url = getFetchKey(params);
    return reducer(acc, {
      type: 'rest-hooks/receive',
      payload: result,
      meta: {
        schema: schema,
        url: url,
        date: now,
        expiresAt: now * 2
      }
    });
  }, initialState);
  return mockState;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZXN0L21vY2tTdGF0ZS50cyJdLCJuYW1lcyI6WyJyZWR1Y2VyIiwiX19JTlRFUk5BTF9fIiwiaW5pdGlhbFN0YXRlIiwibW9ja0luaXRpYWxTdGF0ZSIsInJlc3VsdHMiLCJub3ciLCJEYXRlIiwibW9ja1N0YXRlIiwicmVkdWNlIiwiYWNjIiwicmVxdWVzdCIsInBhcmFtcyIsInJlc3VsdCIsInNjaGVtYSIsImdldEZldGNoS2V5IiwidXJsIiwidHlwZSIsInBheWxvYWQiLCJtZXRhIiwiZGF0ZSIsImV4cGlyZXNBdCJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBMkNBLE9BQTNDLEVBQW9EQyxZQUFwRCxRQUF3RSxJQUF4RTtJQUNRQyxZLEdBQWlCRCxZLENBQWpCQyxZO0FBUVIsZUFBZSxTQUFTQyxnQkFBVCxDQUliQyxPQUphLEVBSU87QUFDcEIsTUFBTUMsR0FBRyxHQUFHQyxJQUFJLENBQUNELEdBQUwsRUFBWjtBQUNBLE1BQU1FLFNBQVMsR0FBR0gsT0FBTyxDQUFDSSxNQUFSLENBQWUsVUFBQ0MsR0FBRCxRQUFzQztBQUFBLFFBQTlCQyxPQUE4QixRQUE5QkEsT0FBOEI7QUFBQSxRQUFyQkMsTUFBcUIsUUFBckJBLE1BQXFCO0FBQUEsUUFBYkMsTUFBYSxRQUFiQSxNQUFhO0FBQUEsUUFDN0RDLE1BRDZELEdBQ3JDSCxPQURxQyxDQUM3REcsTUFENkQ7QUFBQSxRQUNyREMsV0FEcUQsR0FDckNKLE9BRHFDLENBQ3JESSxXQURxRDtBQUVyRSxRQUFNQyxHQUFHLEdBQUdELFdBQVcsQ0FBQ0gsTUFBRCxDQUF2QjtBQUNBLFdBQU9YLE9BQU8sQ0FBQ1MsR0FBRCxFQUFNO0FBQ2xCTyxNQUFBQSxJQUFJLEVBQUUsb0JBRFk7QUFFbEJDLE1BQUFBLE9BQU8sRUFBRUwsTUFGUztBQUdsQk0sTUFBQUEsSUFBSSxFQUFFO0FBQUVMLFFBQUFBLE1BQU0sRUFBTkEsTUFBRjtBQUFVRSxRQUFBQSxHQUFHLEVBQUhBLEdBQVY7QUFBZUksUUFBQUEsSUFBSSxFQUFFZCxHQUFyQjtBQUEwQmUsUUFBQUEsU0FBUyxFQUFFZixHQUFHLEdBQUc7QUFBM0M7QUFIWSxLQUFOLENBQWQ7QUFLRCxHQVJpQixFQVFmSCxZQVJlLENBQWxCO0FBU0EsU0FBT0ssU0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhZFNoYXBlLCBSZWNlaXZlQWN0aW9uLCBTY2hlbWEsIHJlZHVjZXIsIF9fSU5URVJOQUxfXyB9IGZyb20gJy4uJztcbmNvbnN0IHsgaW5pdGlhbFN0YXRlIH0gPSBfX0lOVEVSTkFMX187XG5cbmV4cG9ydCBpbnRlcmZhY2UgRml4dHVyZSB7XG4gIHJlcXVlc3Q6IFJlYWRTaGFwZTxTY2hlbWEsIG9iamVjdD47XG4gIHBhcmFtczogb2JqZWN0O1xuICByZXN1bHQ6IG9iamVjdCB8IHN0cmluZyB8IG51bWJlcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbW9ja0luaXRpYWxTdGF0ZTxcbiAgUyBleHRlbmRzIFNjaGVtYSxcbiAgUGFyYW1zIGV4dGVuZHMgUmVhZG9ubHk8b2JqZWN0PiA9IFJlYWRvbmx5PG9iamVjdD4sXG4gIEJvZHkgZXh0ZW5kcyBSZWFkb25seTxvYmplY3QgfCBzdHJpbmc+IHwgdm9pZCA9IFJlYWRvbmx5PG9iamVjdD4gfCB1bmRlZmluZWRcbj4ocmVzdWx0czogRml4dHVyZVtdKSB7XG4gIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gIGNvbnN0IG1vY2tTdGF0ZSA9IHJlc3VsdHMucmVkdWNlKChhY2MsIHsgcmVxdWVzdCwgcGFyYW1zLCByZXN1bHQgfSkgPT4ge1xuICAgIGNvbnN0IHsgc2NoZW1hLCBnZXRGZXRjaEtleSB9ID0gcmVxdWVzdDtcbiAgICBjb25zdCB1cmwgPSBnZXRGZXRjaEtleShwYXJhbXMpO1xuICAgIHJldHVybiByZWR1Y2VyKGFjYywge1xuICAgICAgdHlwZTogJ3Jlc3QtaG9va3MvcmVjZWl2ZScsXG4gICAgICBwYXlsb2FkOiByZXN1bHQsXG4gICAgICBtZXRhOiB7IHNjaGVtYSwgdXJsLCBkYXRlOiBub3csIGV4cGlyZXNBdDogbm93ICogMiB9LFxuICAgIH0pO1xuICB9LCBpbml0aWFsU3RhdGUpO1xuICByZXR1cm4gbW9ja1N0YXRlO1xufVxuIl19