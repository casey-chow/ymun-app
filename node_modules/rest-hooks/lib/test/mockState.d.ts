import { ReadShape, Schema } from '..';
export interface Fixture {
    request: ReadShape<Schema, object>;
    params: object;
    result: object | string | number;
}
export default function mockInitialState<S extends Schema, Params extends Readonly<object> = Readonly<object>, Body extends Readonly<object | string> | void = Readonly<object> | undefined>(results: Fixture[]): Readonly<{
    entities: Readonly<{
        [k: string]: {
            [id: string]: unknown;
        } | undefined;
    }>;
    results: Readonly<{
        [url: string]: unknown;
    }>;
    meta: Readonly<{
        [url: string]: {
            date: number;
            error?: Error | undefined;
            expiresAt: number;
        };
    }>;
}>;
