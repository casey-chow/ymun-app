import _jsx from "@babel/runtime/helpers/esm/jsx";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React from 'react';

function isNetworkError(error) {
  return Object.prototype.hasOwnProperty.call(error, 'status');
}

var NetworkErrorBoundary =
/*#__PURE__*/
function (_React$Component) {
  _inherits(NetworkErrorBoundary, _React$Component);

  function NetworkErrorBoundary() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, NetworkErrorBoundary);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NetworkErrorBoundary)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {});

    return _this;
  }

  _createClass(NetworkErrorBoundary, [{
    key: "render",
    value: function render() {
      if (!this.state.error) {
        return this.props.children;
      }

      return _jsx(this.props.fallbackComponent, {
        error: this.state.error
      });
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error) {
      if (isNetworkError(error)) {
        return {
          error: error
        };
      }
    }
  }]);

  return NetworkErrorBoundary;
}(React.Component);

_defineProperty(NetworkErrorBoundary, "defaultProps", {
  fallbackComponent: function fallbackComponent(_ref) {
    var error = _ref.error;
    return _jsx("div", {}, void 0, error.status, " ", error.response && error.response.statusText);
  }
});

export { NetworkErrorBoundary as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWFjdC1pbnRlZ3JhdGlvbi9OZXR3b3JrRXJyb3JCb3VuZGFyeS50c3giXSwibmFtZXMiOlsiUmVhY3QiLCJpc05ldHdvcmtFcnJvciIsImVycm9yIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiTmV0d29ya0Vycm9yQm91bmRhcnkiLCJzdGF0ZSIsInByb3BzIiwiY2hpbGRyZW4iLCJDb21wb25lbnQiLCJmYWxsYmFja0NvbXBvbmVudCIsInN0YXR1cyIsInJlc3BvbnNlIiwic3RhdHVzVGV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLE1BQWtCLE9BQWxCOztBQU9BLFNBQVNDLGNBQVQsQ0FBd0JDLEtBQXhCLEVBQThFO0FBQzVFLFNBQU9DLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXFDSixLQUFyQyxFQUE0QyxRQUE1QyxDQUFQO0FBQ0Q7O0lBU29CSyxvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7OzREQWlCRCxFOzs7Ozs7OzZCQUVUO0FBQ1AsVUFBSSxDQUFDLEtBQUtDLEtBQUwsQ0FBV04sS0FBaEIsRUFBdUI7QUFDckIsZUFBTyxLQUFLTyxLQUFMLENBQVdDLFFBQWxCO0FBQ0Q7O0FBQ0QsYUFBTyxVQUFNLEtBQU4sQ0FBWSxpQkFBWjtBQUE4QixRQUFBLEtBQUssRUFBRSxLQUFLRixLQUFMLENBQVdOO0FBQWhELFFBQVA7QUFDRDs7OzZDQWIrQkEsSyxFQUEyQjtBQUN6RCxVQUFJRCxjQUFjLENBQUNDLEtBQUQsQ0FBbEIsRUFBMkI7QUFDekIsZUFBTztBQUFFQSxVQUFBQSxLQUFLLEVBQUxBO0FBQUYsU0FBUDtBQUNEO0FBQ0Y7Ozs7RUFiT0YsS0FBSyxDQUFDVyxTOztnQkFGS0osb0Isa0JBR0c7QUFDcEJLLEVBQUFBLGlCQUFpQixFQUFFO0FBQUEsUUFBR1YsS0FBSCxRQUFHQSxLQUFIO0FBQUEsV0FDakIsd0JBQ0dBLEtBQUssQ0FBQ1csTUFEVCxPQUNrQlgsS0FBSyxDQUFDWSxRQUFOLElBQWtCWixLQUFLLENBQUNZLFFBQU4sQ0FBZUMsVUFEbkQsQ0FEaUI7QUFBQTtBQURDLEM7O1NBSEhSLG9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGludGVyZmFjZSBOZXR3b3JrRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIHN0YXR1czogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICByZXNwb25zZT86IHsgc3RhdHVzVGV4dD86IHN0cmluZzsgYm9keT86IGFueSB9O1xufVxuXG5mdW5jdGlvbiBpc05ldHdvcmtFcnJvcihlcnJvcjogTmV0d29ya0Vycm9yIHwgdW5rbm93bik6IGVycm9yIGlzIE5ldHdvcmtFcnJvciB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXJyb3IsICdzdGF0dXMnKTtcbn1cblxuaW50ZXJmYWNlIFByb3BzPEUgZXh0ZW5kcyBOZXR3b3JrRXJyb3I+IHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgZmFsbGJhY2tDb21wb25lbnQ6IFJlYWN0LkNvbXBvbmVudFR5cGU8eyBlcnJvcjogRSB9Pjtcbn1cbmludGVyZmFjZSBTdGF0ZTxFIGV4dGVuZHMgTmV0d29ya0Vycm9yPiB7XG4gIGVycm9yPzogRTtcbn1cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5ldHdvcmtFcnJvckJvdW5kYXJ5PFxuICBFIGV4dGVuZHMgTmV0d29ya0Vycm9yXG4+IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzPEU+LCBTdGF0ZTxFPj4ge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGZhbGxiYWNrQ29tcG9uZW50OiAoeyBlcnJvciB9OiB7IGVycm9yOiBOZXR3b3JrRXJyb3IgfSkgPT4gKFxuICAgICAgPGRpdj5cbiAgICAgICAge2Vycm9yLnN0YXR1c30ge2Vycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLnN0YXR1c1RleHR9XG4gICAgICA8L2Rpdj5cbiAgICApLFxuICB9O1xuXG4gIHN0YXRpYyBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IoZXJyb3I6IE5ldHdvcmtFcnJvciB8IGFueSkge1xuICAgIGlmIChpc05ldHdvcmtFcnJvcihlcnJvcikpIHtcbiAgICAgIHJldHVybiB7IGVycm9yIH07XG4gICAgfVxuICB9XG5cbiAgc3RhdGU6IFN0YXRlPEU+ID0ge307XG5cbiAgcmVuZGVyKCkge1xuICAgIGlmICghdGhpcy5zdGF0ZS5lcnJvcikge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICAgIHJldHVybiA8dGhpcy5wcm9wcy5mYWxsYmFja0NvbXBvbmVudCBlcnJvcj17dGhpcy5zdGF0ZS5lcnJvcn0gLz47XG4gIH1cbn1cbiJdfQ==