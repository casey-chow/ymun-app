import { ReactNode } from 'react';
import NetworkManager from "../../state/NetworkManager";
import SubscriptionManager from "../../state/SubscriptionManager";
import PollingSubscription from "../../state/PollingSubscription";
import { State, Manager } from "../../types";
interface ProviderProps {
    children: ReactNode;
    managers: Manager[];
    initialState: State<unknown>;
}
/** Controller managing state of the REST cache and coordinating network requests. */
declare function CacheProvider({ children, managers, initialState, }: ProviderProps): JSX.Element;
declare namespace CacheProvider {
    var defaultProps: {
        managers: (NetworkManager | SubscriptionManager<typeof PollingSubscription>)[];
        initialState: Readonly<{
            entities: Readonly<{
                [k: string]: {
                    [id: string]: unknown;
                } | undefined;
            }>;
            results: Readonly<{
                [url: string]: unknown;
            }>;
            meta: Readonly<{
                [url: string]: {
                    date: number;
                    error?: Error | undefined;
                    expiresAt: number;
                };
            }>;
        }>;
    };
}
export default CacheProvider;
