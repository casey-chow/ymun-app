import { ReadShape, Schema, Denormalize, DenormalizeNullable } from "../../resource";
declare type CondNull<P, A, B> = P extends null ? A : B;
/** Ensure a resource is available; suspending to React until it is. */
export default function useResource<P extends Readonly<object> | null, B extends Readonly<object | string> | void, S extends Schema>(fetchShape: ReadShape<S, NonNullable<P>>, params: P): CondNull<P, DenormalizeNullable<S>, Denormalize<S>>;
export default function useResource<P1 extends Readonly<object> | null, S1 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1]): [CondNull<P1, DenormalizeNullable<S1>, Denormalize<S1>>];
export default function useResource<P1 extends Readonly<object> | null, S1 extends Schema, P2 extends Readonly<object> | null, S2 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1], v2: [ReadShape<S2, NonNullable<P2>>, P2]): [CondNull<P1, DenormalizeNullable<S1>, Denormalize<S1>>, CondNull<P2, DenormalizeNullable<S2>, Denormalize<S2>>];
export default function useResource<P1 extends Readonly<object> | null, S1 extends Schema, P2 extends Readonly<object> | null, S2 extends Schema, P3 extends Readonly<object> | null, S3 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1], v2: [ReadShape<S2, NonNullable<P2>>, P2], v3: [ReadShape<S3, NonNullable<P3>>, P3]): [CondNull<P1, DenormalizeNullable<S1>, Denormalize<S1>>, CondNull<P2, DenormalizeNullable<S2>, Denormalize<S2>>, CondNull<P3, DenormalizeNullable<S3>, Denormalize<S3>>];
export default function useResource<P1 extends Readonly<object> | null, S1 extends Schema, P2 extends Readonly<object> | null, S2 extends Schema, P3 extends Readonly<object> | null, S3 extends Schema, P4 extends Readonly<object> | null, S4 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1], v2: [ReadShape<S2, NonNullable<P2>>, P2], v3: [ReadShape<S3, NonNullable<P3>>, P3], v4: [ReadShape<S4, NonNullable<P4>>, P4]): [CondNull<P1, DenormalizeNullable<S1>, Denormalize<S1>>, CondNull<P2, DenormalizeNullable<S2>, Denormalize<S2>>, CondNull<P3, DenormalizeNullable<S3>, Denormalize<S3>>, CondNull<P4, DenormalizeNullable<S4>, Denormalize<S4>>];
export default function useResource<P1 extends Readonly<object> | null, S1 extends Schema, P2 extends Readonly<object> | null, S2 extends Schema, P3 extends Readonly<object> | null, S3 extends Schema, P4 extends Readonly<object> | null, S4 extends Schema, P5 extends Readonly<object> | null, S5 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1], v2: [ReadShape<S2, NonNullable<P2>>, P2], v3: [ReadShape<S3, NonNullable<P3>>, P3], v4: [ReadShape<S4, NonNullable<P4>>, P4], v5: [ReadShape<S5, NonNullable<P5>>, P5]): [CondNull<P1, DenormalizeNullable<S1>, Denormalize<S1>>, CondNull<P2, DenormalizeNullable<S2>, Denormalize<S2>>, CondNull<P3, DenormalizeNullable<S3>, Denormalize<S3>>, CondNull<P4, DenormalizeNullable<S4>, Denormalize<S4>>, CondNull<P5, DenormalizeNullable<S5>, Denormalize<S5>>];
export {};
