import { useContext, useCallback, useRef } from 'react';
import { DispatchContext } from "../context";
/** Invalidate a certain item within the cache */

export default function useInvalidator(fetchShape) {
  var dispatch = useContext(DispatchContext);
  var getFetchKeyRef = useRef(fetchShape.getFetchKey);
  getFetchKeyRef.current = fetchShape.getFetchKey;
  var invalidateDispatcher = useCallback(function (params) {
    if (!params) return;
    dispatch({
      type: 'rest-hooks/invalidate',
      meta: {
        url: getFetchKeyRef.current(params)
      }
    });
  }, [dispatch]);
  return invalidateDispatcher;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yZWFjdC1pbnRlZ3JhdGlvbi9ob29rcy91c2VJbnZhbGlkYXRvci50cyJdLCJuYW1lcyI6WyJ1c2VDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VSZWYiLCJEaXNwYXRjaENvbnRleHQiLCJ1c2VJbnZhbGlkYXRvciIsImZldGNoU2hhcGUiLCJkaXNwYXRjaCIsImdldEZldGNoS2V5UmVmIiwiZ2V0RmV0Y2hLZXkiLCJjdXJyZW50IiwiaW52YWxpZGF0ZURpc3BhdGNoZXIiLCJwYXJhbXMiLCJ0eXBlIiwibWV0YSIsInVybCJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsVUFBVCxFQUFxQkMsV0FBckIsRUFBa0NDLE1BQWxDLFFBQWdELE9BQWhEO0FBR0EsU0FBU0MsZUFBVCxRQUFnQyxZQUFoQztBQUVBOztBQUNBLGVBQWUsU0FBU0MsY0FBVCxDQUdiQyxVQUhhLEVBR3NEO0FBQ25FLE1BQU1DLFFBQVEsR0FBR04sVUFBVSxDQUFDRyxlQUFELENBQTNCO0FBQ0EsTUFBTUksY0FBYyxHQUFHTCxNQUFNLENBQUNHLFVBQVUsQ0FBQ0csV0FBWixDQUE3QjtBQUNBRCxFQUFBQSxjQUFjLENBQUNFLE9BQWYsR0FBeUJKLFVBQVUsQ0FBQ0csV0FBcEM7QUFFQSxNQUFNRSxvQkFBb0IsR0FBR1QsV0FBVyxDQUN0QyxVQUFDVSxNQUFELEVBQTJCO0FBQ3pCLFFBQUksQ0FBQ0EsTUFBTCxFQUFhO0FBQ2JMLElBQUFBLFFBQVEsQ0FBQztBQUNQTSxNQUFBQSxJQUFJLEVBQUUsdUJBREM7QUFFUEMsTUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFFBQUFBLEdBQUcsRUFBRVAsY0FBYyxDQUFDRSxPQUFmLENBQXVCRSxNQUF2QjtBQUREO0FBRkMsS0FBRCxDQUFSO0FBTUQsR0FUcUMsRUFVdEMsQ0FBQ0wsUUFBRCxDQVZzQyxDQUF4QztBQWFBLFNBQU9JLG9CQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDb250ZXh0LCB1c2VDYWxsYmFjaywgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBSZWFkU2hhcGUsIFNjaGVtYSB9IGZyb20gJ34vcmVzb3VyY2UnO1xuaW1wb3J0IHsgRGlzcGF0Y2hDb250ZXh0IH0gZnJvbSAnfi9yZWFjdC1pbnRlZ3JhdGlvbi9jb250ZXh0JztcblxuLyoqIEludmFsaWRhdGUgYSBjZXJ0YWluIGl0ZW0gd2l0aGluIHRoZSBjYWNoZSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlSW52YWxpZGF0b3I8XG4gIFBhcmFtcyBleHRlbmRzIFJlYWRvbmx5PG9iamVjdD4sXG4gIFMgZXh0ZW5kcyBTY2hlbWFcbj4oZmV0Y2hTaGFwZTogUmVhZFNoYXBlPFMsIFBhcmFtcz4pOiAocGFyYW1zOiBQYXJhbXMgfCBudWxsKSA9PiB2b2lkIHtcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VDb250ZXh0KERpc3BhdGNoQ29udGV4dCk7XG4gIGNvbnN0IGdldEZldGNoS2V5UmVmID0gdXNlUmVmKGZldGNoU2hhcGUuZ2V0RmV0Y2hLZXkpO1xuICBnZXRGZXRjaEtleVJlZi5jdXJyZW50ID0gZmV0Y2hTaGFwZS5nZXRGZXRjaEtleTtcblxuICBjb25zdCBpbnZhbGlkYXRlRGlzcGF0Y2hlciA9IHVzZUNhbGxiYWNrKFxuICAgIChwYXJhbXM6IFBhcmFtcyB8IG51bGwpID0+IHtcbiAgICAgIGlmICghcGFyYW1zKSByZXR1cm47XG4gICAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6ICdyZXN0LWhvb2tzL2ludmFsaWRhdGUnLFxuICAgICAgICBtZXRhOiB7XG4gICAgICAgICAgdXJsOiBnZXRGZXRjaEtleVJlZi5jdXJyZW50KHBhcmFtcyksXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9LFxuICAgIFtkaXNwYXRjaF0sXG4gICk7XG5cbiAgcmV0dXJuIGludmFsaWRhdGVEaXNwYXRjaGVyO1xufVxuIl19