import { ReadShape, Schema, SchemaOf } from "../../resource";
declare type CondNull<P, R> = P extends null ? null : R;
/** Ensure a resource is available; suspending to React until it is. */
export default function useResourceLegacy<P extends Readonly<object> | null, S extends Schema>(fetchShape: ReadShape<S, NonNullable<P>>, params: P): CondNull<P, SchemaOf<S>>;
export default function useResourceLegacy<P1 extends Readonly<object> | null, S1 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1]): [CondNull<P1, SchemaOf<S1>>];
export default function useResourceLegacy<P1 extends Readonly<object> | null, S1 extends Schema, P2 extends Readonly<object> | null, S2 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1], v2: [ReadShape<S2, NonNullable<P2>>, P2]): [CondNull<P1, SchemaOf<S1>>, CondNull<P2, SchemaOf<S2>>];
export default function useResourceLegacy<P1 extends Readonly<object> | null, S1 extends Schema, P2 extends Readonly<object> | null, S2 extends Schema, P3 extends Readonly<object> | null, S3 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1], v2: [ReadShape<S2, NonNullable<P2>>, P2], v3: [ReadShape<S3, NonNullable<P3>>, P3]): [CondNull<P1, SchemaOf<S1>>, CondNull<P2, SchemaOf<S2>>, CondNull<P3, SchemaOf<S3>>];
export default function useResourceLegacy<P1 extends Readonly<object> | null, S1 extends Schema, P2 extends Readonly<object> | null, S2 extends Schema, P3 extends Readonly<object> | null, S3 extends Schema, P4 extends Readonly<object> | null, S4 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1], v2: [ReadShape<S2, NonNullable<P2>>, P2], v3: [ReadShape<S3, NonNullable<P3>>, P3], v4: [ReadShape<S4, NonNullable<P4>>, P4]): [CondNull<P1, SchemaOf<S1>>, CondNull<P2, SchemaOf<S2>>, CondNull<P3, SchemaOf<S3>>, CondNull<P4, SchemaOf<S4>>];
export default function useResourceLegacy<P1 extends Readonly<object> | null, S1 extends Schema, P2 extends Readonly<object> | null, S2 extends Schema, P3 extends Readonly<object> | null, S3 extends Schema, P4 extends Readonly<object> | null, S4 extends Schema, P5 extends Readonly<object> | null, S5 extends Schema>(v1: [ReadShape<S1, NonNullable<P1>>, P1], v2: [ReadShape<S2, NonNullable<P2>>, P2], v3: [ReadShape<S3, NonNullable<P3>>, P3], v4: [ReadShape<S4, NonNullable<P4>>, P4], v5: [ReadShape<S5, NonNullable<P5>>, P5]): [CondNull<P1, SchemaOf<S1>>, CondNull<P2, SchemaOf<S2>>, CondNull<P3, SchemaOf<S3>>, CondNull<P4, SchemaOf<S4>>, CondNull<P5, SchemaOf<S5>>];
export {};
